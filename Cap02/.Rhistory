setwd("C:/Users/Leonam/Desktop/Cursos/BigDataRAzure/Cap02")
getwd()
# Soma
7 + 7
# Subtração
7 - 4
# Multiplicação
5 * 5
# Divisão
6 / 6
tência
# Potência
3^2
3**2
x = 7
y = 5
# Operadores
x > 8
x < 8
x <= 8
x >= 8
x == 8
x !=8
(x==8) & (x==6)
(x==7) & (x==5)
(x==8) & (x==5)
# Or
(x==8) | (x>5)
(x==8) | (x>=5)
x>8
print(!x > 8)
!x
print(!x > 8)
var1 = 100
var1
mode(var1)
help("mode")
sqrt(var1)
var2 = var1
var2
mode(var2)
typeof(var2)
help("typeof")
var3 = c("primeiro", "sgundo", "terceiro")
var3
mode(var3)
typeof(var3)
var4 = function(x){x + 3}
var4
mode(var4)
var5 = as.character(var1)
var5
mode(var5)
x <- c(1,2,3)
x
x1 = c(1,2,3)
x1
c(1,2,3) -> y
y
x <- c(1,2,3)
x
x1 = c(1,2,3)
x1
c(1,2,3) -> y
y
assign("x", c(6.3,4,-2))
x
# Verificando o valor em uma posição específica
x[1]
ls()
objects()
rm(x)
x
num1 <- 7
num1
class(num1)
mode(num1)
typeof(num1)
# Numeric - Todos os números criados em R são do tipo numeric
# São armazenados como números decimais (double)
num1 <- 7
num1
class(num1)
mode(num1)
typeof(num1)
num2 = 16.82
num2
mode(num2)
typeof(num2)
# Integer
# Convertemos tipos numeric para integer
is.integer(num2)
is.integer(num2)
y = as.integer(num2)
class(y)
mode(y)
typeof(y)
is.integer(num2)
as.integer("3.17")
as.integer("Joe")
as.integer('Joe')
as.integer(True)
char1 = 'A'
char1
mode(char1)
typeof(char1)
as.integer("3.17")
as.integer("Joe")
as.integer('Joe')
as.integer(True)
as.integer(TRUE)
as.integer("3.17")
as.integer("Joe")
as.integer('Joe')
as.integer(TRUE)
as.integer('FALSE')
as.integer("3.17")
as.integer("Joe")
as.integer('Joe')
as.integer(TRUE)
as.integer(FALSE)
char1 = 'A'
char1
mode(char1)
typeof(char1)
char2='cientista'
char2
mode(char2)
typeof(char2)
char3 = c('Data','Science', 'Academy')
char3
mode(char3)
typeof(char3)
compl = 2.5 + 4i
compl
mode(compl)
typeof(compl)
sqrt(-1)
sqrt(-1+0i)
sqrt(as.complex(-1))
# Logic
x = 1; y =2
z = x > y
z
class(z)
u = TRUE
u = TRUE; v = FALSE
class(u)
u & v
u | v
!u
# Operações com 0
5/0
5/0
0/5
# Erro
"Joe"/5
vetor1 <- c(1:20)
vetor1
length(vetor1)
mode(vetor1)
class(vetor1)
typeof(vetor1)
matrix1 <- matrix(1:20, nrow = 2)
matrix1
length(matrix1)
mode(matrix1)
class(matrix1)
typeof(matrix1)
matrix1 <- matrix(1:20, nrow = 2)
matrix1
length(matrix1)
mode(matrix1)
class(matrix1)
typeof(matrix1)
vetor1 <- c(1:20)
vetor1
length(vetor1)
mode(vetor1)
class(vetor1)
typeof(vetor1)
matrix1 <- matrix(1:20, nrow = 2)
matrix1
length(matrix1)
mode(matrix1)
class(matrix1)
typeof(matrix1)
array1 <- array(1:5, dim=x(3,3,3))
array1 <- array(1:5, dim=c(3,3,3))
array1
array1 <- array(1:5, dim=c(3,3,3))
array1
array1 <- array(1:27, dim=c(3,3,3))
array1
array1 <- array(1:27, dim=c(3,3,3))
array1
array1 <- array(1:27, dim=c(3,3,3))
array1
length(array1)
mode(array1)
class(array1)
typeof(array1)
view(iris)
view(iris)
library(datasets)
view(iris)
str(iris)
View(iris)
length(iris)
mode(iris)
class(iris)
class(iris)
typeof(iris)
vetor1 <- c(1:20)
matrix1 <- matrix(1:20, nrow = 2)
array1 <- array(1:27, dim=c(3,3,3))
lista1 <- list(a=matrix1, b=vetor1)
lista1
View(matrix1)
length(lista1)
mode(lista1)
class(lista1)
typeof(lista1)
length(lista1.a)
lista1
lista1[a]
lista1['a']
lista1.a
func1 <- function(x){
var1 <- x * x
return(var1)
}
func1(5)
class(func1)
mode(func1)
typeof(func1)
# Removendo Objetos
objects()
rm(array1, func1)
objects()
vetor_caracter = c("Data", "Science", "Academy")
vetor_numerico = c(1.9, 45.3, 300.5)
vetor_numerico
vetor_complexo = c(5.2 + 3i, 3.8+4i)
vetor_complexo
vetor_logico = c(TRUE, FALSE, TRUE, FALSE, FALSE)
vetor_logico
vetor_integer = c(2, 4 ,6)
vetor_integer
vetor_integer = c(2, 4.07 ,6)
vetor_integer
vetor_integer = c(2, 4 ,6)
vetor_integer
vetor1 = seq (1:10)
vetor1
is.vector(vetor1)
is.vector(vetor_numerico)
vetor1
is.vector(vetor1)
vetor2 = rep(1:10)
vetor2
is.vector(vetor2)
vetor1 = seq(1:10)
vetor1
is.vector(vetor1)
vetor1 = seq(1:10)
vetor1
is.vector(vetor1)
# Utilizando a função rep
vetor2 = rep(1:10)
vetor2
is.vector(vetor2)
a <- c(1,2,3,4,5)
a
a[1]
a[6]
v1 = c(2,3,5)
v2 = c("aa", "bb", "cc", "dd", "ee")
c(v1,v2)
v1 = c(2,3,5)
v2 = c("aa", "bb", "cc", "dd", "ee")
c(v1,v2)
x = c(1, 3, 5, 7)
y = c(2, 4, 6, 8)
x * 5
x + y
x - y
x * y
x / y
alfa = c(10, 20, 30)
beta = c(1, 2, 3, 4, 5, 6, 7, 8, 9)
alfa + beta
v = c("Nelson", "Mandela")
v
names(v) = c("Nome", "Sobrenome")
v = c("Nelson", "Mandela")
v
names(v) = c("Nome", "Sobrenome")
v
v["Nome"]
